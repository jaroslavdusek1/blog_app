services:
  db:
    image: postgres:15
    container_name: blog_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: blog
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d blog']
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog_backend
    restart: always
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/blog
      JWT_SECRET: my_jwt_secret
      PORT: 3000
    volumes:
      - ./backend/uploads:/usr/src/app/uploads
    depends_on:
      db:
        condition: service_healthy
    platform: linux/arm64

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog_frontend
    restart: always
    ports:
      - "3001:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      # temporary DELETE LATER
    volumes:
    - ./frontend:/usr/src/app

    depends_on:
      - backend

  redis:
    image: redis:latest
    container_name: blog_redis
    ports:
      - '6379:6379'

volumes:
  db_data:
